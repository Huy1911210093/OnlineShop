//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnlineShop.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OnlineFishShopEntities : DbContext
    {
        public OnlineFishShopEntities()
            : base("name=OnlineFishShopEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<GroupProduct> GroupProducts { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Province> Provinces { get; set; }
        public virtual DbSet<Shop> Shops { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<UserAccount> UserAccounts { get; set; }
        public virtual DbSet<UserActivation> UserActivations { get; set; }
    
        public virtual int sp_Admin_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Admin_Getall_Result> sp_Admin_Getall()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Admin_Getall_Result>("sp_Admin_Getall");
        }
    
        public virtual ObjectResult<sp_Admin_GetById_Result> sp_Admin_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Admin_GetById_Result>("sp_Admin_GetById", idParameter);
        }
    
        public virtual int sp_Admin_Insert(Nullable<int> id, string firstName, string lastName, string email, string password)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_Insert", idParameter, firstNameParameter, lastNameParameter, emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_Admin_Login(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_Admin_Login", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<sp_Admin_SortLastName_Decrease_Result> sp_Admin_SortLastName_Decrease()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Admin_SortLastName_Decrease_Result>("sp_Admin_SortLastName_Decrease");
        }
    
        public virtual ObjectResult<sp_Admin_SortLastName_Increase_Result> sp_Admin_SortLastName_Increase()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Admin_SortLastName_Increase_Result>("sp_Admin_SortLastName_Increase");
        }
    
        public virtual int sp_Admin_Update(Nullable<int> id, string firstName, string lastName, string email, string password)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_Update", idParameter, firstNameParameter, lastNameParameter, emailParameter, passwordParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Customer_CountAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Customer_CountAll");
        }
    
        public virtual ObjectResult<sp_Customer_Getall_Result> sp_Customer_Getall()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Customer_Getall_Result>("sp_Customer_Getall");
        }
    
        public virtual int sp_Customer_Insert(Nullable<int> idCustomer, string firstName, string lastName, string address, string phone, string email)
        {
            var idCustomerParameter = idCustomer.HasValue ?
                new ObjectParameter("IdCustomer", idCustomer) :
                new ObjectParameter("IdCustomer", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_Insert", idCustomerParameter, firstNameParameter, lastNameParameter, addressParameter, phoneParameter, emailParameter);
        }
    
        public virtual ObjectResult<sp_Customer_SortLastName_Decrease_Result> sp_Customer_SortLastName_Decrease()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Customer_SortLastName_Decrease_Result>("sp_Customer_SortLastName_Decrease");
        }
    
        public virtual ObjectResult<sp_Customer_SortLastName_Increase_Result> sp_Customer_SortLastName_Increase()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Customer_SortLastName_Increase_Result>("sp_Customer_SortLastName_Increase");
        }
    
        public virtual int sp_Customer_Update(Nullable<int> idCustomer, string firstName, string lastName, string address, string phone, string email)
        {
            var idCustomerParameter = idCustomer.HasValue ?
                new ObjectParameter("IdCustomer", idCustomer) :
                new ObjectParameter("IdCustomer", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_Update", idCustomerParameter, firstNameParameter, lastNameParameter, addressParameter, phoneParameter, emailParameter);
        }
    
        public virtual int sp_Customers_Delete(Nullable<int> idCustomer)
        {
            var idCustomerParameter = idCustomer.HasValue ?
                new ObjectParameter("IdCustomer", idCustomer) :
                new ObjectParameter("IdCustomer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customers_Delete", idCustomerParameter);
        }
    
        public virtual ObjectResult<sp_Customers_GetByID_Result> sp_Customers_GetByID(Nullable<int> idCustomer)
        {
            var idCustomerParameter = idCustomer.HasValue ?
                new ObjectParameter("IdCustomer", idCustomer) :
                new ObjectParameter("IdCustomer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Customers_GetByID_Result>("sp_Customers_GetByID", idCustomerParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_GroupProduct_Insert(Nullable<int> idGroupProduct, string name, string content, string images, Nullable<int> status)
        {
            var idGroupProductParameter = idGroupProduct.HasValue ?
                new ObjectParameter("IdGroupProduct", idGroupProduct) :
                new ObjectParameter("IdGroupProduct", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var imagesParameter = images != null ?
                new ObjectParameter("Images", images) :
                new ObjectParameter("Images", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupProduct_Insert", idGroupProductParameter, nameParameter, contentParameter, imagesParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_Oder_Insert(Nullable<int> idOder, Nullable<int> idCustomer, Nullable<double> totalMoney, Nullable<System.DateTime> date, Nullable<int> status)
        {
            var idOderParameter = idOder.HasValue ?
                new ObjectParameter("IdOder", idOder) :
                new ObjectParameter("IdOder", typeof(int));
    
            var idCustomerParameter = idCustomer.HasValue ?
                new ObjectParameter("IdCustomer", idCustomer) :
                new ObjectParameter("IdCustomer", typeof(int));
    
            var totalMoneyParameter = totalMoney.HasValue ?
                new ObjectParameter("TotalMoney", totalMoney) :
                new ObjectParameter("TotalMoney", typeof(double));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Oder_Insert", idOderParameter, idCustomerParameter, totalMoneyParameter, dateParameter, statusParameter);
        }
    
        public virtual int sp_OderDetail_Insert(Nullable<int> idOderDetail, Nullable<int> idProduct, Nullable<int> idOrder, Nullable<int> idCustomer, Nullable<int> quantity)
        {
            var idOderDetailParameter = idOderDetail.HasValue ?
                new ObjectParameter("IdOderDetail", idOderDetail) :
                new ObjectParameter("IdOderDetail", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(int));
    
            var idOrderParameter = idOrder.HasValue ?
                new ObjectParameter("IdOrder", idOrder) :
                new ObjectParameter("IdOrder", typeof(int));
    
            var idCustomerParameter = idCustomer.HasValue ?
                new ObjectParameter("IdCustomer", idCustomer) :
                new ObjectParameter("IdCustomer", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OderDetail_Insert", idOderDetailParameter, idProductParameter, idOrderParameter, idCustomerParameter, quantityParameter);
        }
    
        public virtual int sp_Order_Conform(Nullable<int> idOrder)
        {
            var idOrderParameter = idOrder.HasValue ?
                new ObjectParameter("IdOrder", idOrder) :
                new ObjectParameter("IdOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Order_Conform", idOrderParameter);
        }
    
        public virtual int sp_Order_Delete(Nullable<int> idOrder)
        {
            var idOrderParameter = idOrder.HasValue ?
                new ObjectParameter("IdOrder", idOrder) :
                new ObjectParameter("IdOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Order_Delete", idOrderParameter);
        }
    
        public virtual int sp_Order_Pay(Nullable<int> idOrder)
        {
            var idOrderParameter = idOrder.HasValue ?
                new ObjectParameter("IdOrder", idOrder) :
                new ObjectParameter("IdOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Order_Pay", idOrderParameter);
        }
    
        public virtual int sp_Product_ChangeName(Nullable<int> idGroupProduct, string name)
        {
            var idGroupProductParameter = idGroupProduct.HasValue ?
                new ObjectParameter("IdGroupProduct", idGroupProduct) :
                new ObjectParameter("IdGroupProduct", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_ChangeName", idGroupProductParameter, nameParameter);
        }
    
        public virtual int sp_Product_Insert(Nullable<int> idProduct, Nullable<int> idGroupProduct, string name, string detail, Nullable<double> price, string image, Nullable<double> priceNew, Nullable<System.DateTime> date, string dVT, Nullable<int> status, string size)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(int));
    
            var idGroupProductParameter = idGroupProduct.HasValue ?
                new ObjectParameter("IdGroupProduct", idGroupProduct) :
                new ObjectParameter("IdGroupProduct", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var priceNewParameter = priceNew.HasValue ?
                new ObjectParameter("PriceNew", priceNew) :
                new ObjectParameter("PriceNew", typeof(double));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var dVTParameter = dVT != null ?
                new ObjectParameter("DVT", dVT) :
                new ObjectParameter("DVT", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Insert", idProductParameter, idGroupProductParameter, nameParameter, detailParameter, priceParameter, imageParameter, priceNewParameter, dateParameter, dVTParameter, statusParameter, sizeParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Users_CountAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Users_CountAll");
        }
    
        public virtual int sp_Users_Delete(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Users_Delete", emailParameter);
        }
    
        public virtual ObjectResult<sp_Users_Getall_Result> sp_Users_Getall()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Users_Getall_Result>("sp_Users_Getall");
        }
    
        public virtual ObjectResult<sp_Users_GetByEmail_Result> sp_Users_GetByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Users_GetByEmail_Result>("sp_Users_GetByEmail", emailParameter);
        }
    
        public virtual int sp_Users_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Users_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Users_Insert(string email, string firstName, string lastName, string phone, string password, Nullable<System.DateTime> createdDay, Nullable<int> status)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var createdDayParameter = createdDay.HasValue ?
                new ObjectParameter("CreatedDay", createdDay) :
                new ObjectParameter("CreatedDay", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Users_Insert", emailParameter, firstNameParameter, lastNameParameter, phoneParameter, passwordParameter, createdDayParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_Users_SortLastName_Decrease_Result> sp_Users_SortLastName_Decrease()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Users_SortLastName_Decrease_Result>("sp_Users_SortLastName_Decrease");
        }
    
        public virtual ObjectResult<sp_Users_SortLastName_Increase_Result> sp_Users_SortLastName_Increase()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Users_SortLastName_Increase_Result>("sp_Users_SortLastName_Increase");
        }
    
        public virtual int sp_Users_Update(string email, string firstName, string lastName, string phone, string password, Nullable<System.DateTime> createdDay, Nullable<int> status)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var createdDayParameter = createdDay.HasValue ?
                new ObjectParameter("CreatedDay", createdDay) :
                new ObjectParameter("CreatedDay", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Users_Update", emailParameter, firstNameParameter, lastNameParameter, phoneParameter, passwordParameter, createdDayParameter, statusParameter);
        }
    }
}
